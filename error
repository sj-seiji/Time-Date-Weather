import * as React from 'react';
import Image from './Image/Image';
import styles from './Hero.module.scss';
import { IHeroProps } from './IHeroProps';
import { IImage } from '../IImage';
import ImageCarousel from './ImageCarousel/ImageCarousel';

const Hero = ({ title, images, fontFamily, fontColor, textBackdrop }: IHeroProps): JSX.Element => {
  const primaryImage = images[0];
  const secondaryImages = images.slice(1);
  const backgroundColor = textBackdrop ? 'rgb(0,0,0,0.4)' : 'unset';

  function formatImagesIntoRows(images: IImage[]): IImage[][] {
    return images.reduce((rows, key, index) => (
      index % 2 === 0 ? rows.push([key]) : rows[rows.length - 1].push(key)
    ) && rows, []);
  }

  return (
    <div className={styles.container}>
      { title && <h3 className={styles.title}>{title}</h3> }
      <div className={styles.hero}>
        { primaryImage && 
          <div className={styles.primaryContainer}>
            <div className={styles.imageContainer} onClick={() => { window.location.href = primaryImage.linkUrl }}>
              <Image item={primaryImage} fontFamily={fontFamily} fontColor={fontColor} backgroundColor={backgroundColor} />
            </div>
          </div>
        }
        { secondaryImages.length >= 1 && 
          <div className={styles.secondaryContainer} data-imgcount={secondaryImages.length}>
          {
          formatImagesIntoRows(secondaryImages).map((row: IImage[], idx: React.Key) => (
            <div className={styles.imageRow} key={idx}>
              {row.map((image: IImage, idx: React.Key) => (
                <div className={styles.imageContainer} key={idx} onClick={() => {window.location.href = image.linkUrl}}>
                  <Image item={image} fontFamily={fontFamily} fontColor={fontColor} backgroundColor={backgroundColor} />
                </div>
              ))}
            </div>
          ))
          }
          </div>
        }
      </div>
      <ImageCarousel images={images} fontFamily={fontFamily} fontColor={fontColor} backgroundColor={backgroundColor} />
    </div>
  );
}

export default Hero;
